{"ast":null,"code":"import{createStore,applyMiddleware}from'redux';import{composeWithDevTools}from'redux-devtools-extension';import thunk from'redux-thunk';import rootReducer from'./reducers';import setAuthToken from'./utils/setAuthToken';var initialState={};var middleware=[thunk];var store=createStore(rootReducer,initialState,composeWithDevTools(applyMiddleware.apply(void 0,middleware)));// set up a store subscription listener\n// to store the users token in localStorage\n// prevent auth error on first run of subscription\nvar currentState={auth:{token:null,isAuthenticated:null,loading:true,user:null}};store.subscribe(function(){// keep track of the previous and current state to compare changes\nvar previousState=currentState;currentState=store.getState();// if the token changes set the value in localStorage and axios headers\nif(previousState.auth.token!==currentState.auth.token){var token=currentState.auth.token;setAuthToken(token);}});export default store;","map":{"version":3,"names":["createStore","applyMiddleware","composeWithDevTools","thunk","rootReducer","setAuthToken","initialState","middleware","store","apply","currentState","auth","token","isAuthenticated","loading","user","subscribe","previousState","getState"],"sources":["C:/Users/dmbru/Code/papers/client/src/store.js"],"sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\nimport setAuthToken from './utils/setAuthToken';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n\trootReducer,\r\n\tinitialState,\r\n\tcomposeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\n// set up a store subscription listener\r\n// to store the users token in localStorage\r\n\r\n// prevent auth error on first run of subscription\r\nlet currentState = {\r\n\tauth: { token: null, isAuthenticated: null, loading: true, user: null },\r\n};\r\n\r\nstore.subscribe(() => {\r\n\t// keep track of the previous and current state to compare changes\r\n\tlet previousState = currentState;\r\n\tcurrentState = store.getState();\r\n\t// if the token changes set the value in localStorage and axios headers\r\n\tif (previousState.auth.token !== currentState.auth.token) {\r\n\t\tconst token = currentState.auth.token;\r\n\t\tsetAuthToken(token);\r\n\t}\r\n});\r\nexport default store;\r\n"],"mappings":"AAAA,OAASA,WAAW,CAAEC,eAAe,KAAQ,OAAO,CACpD,OAASC,mBAAmB,KAAQ,0BAA0B,CAC9D,MAAO,CAAAC,KAAK,KAAM,aAAa,CAC/B,MAAO,CAAAC,WAAW,KAAM,YAAY,CACpC,MAAO,CAAAC,YAAY,KAAM,sBAAsB,CAE/C,GAAM,CAAAC,YAAY,CAAG,CAAC,CAAC,CAEvB,GAAM,CAAAC,UAAU,CAAG,CAACJ,KAAK,CAAC,CAE1B,GAAM,CAAAK,KAAK,CAAGR,WAAW,CACxBI,WAAW,CACXE,YAAY,CACZJ,mBAAmB,CAACD,eAAe,CAAAQ,KAAA,QAAIF,UAAU,CAAC,CACnD,CAAC,CAED;AACA;AAEA;AACA,GAAI,CAAAG,YAAY,CAAG,CAClBC,IAAI,CAAE,CAAEC,KAAK,CAAE,IAAI,CAAEC,eAAe,CAAE,IAAI,CAAEC,OAAO,CAAE,IAAI,CAAEC,IAAI,CAAE,IAAK,CACvE,CAAC,CAEDP,KAAK,CAACQ,SAAS,CAAC,UAAM,CACrB;AACA,GAAI,CAAAC,aAAa,CAAGP,YAAY,CAChCA,YAAY,CAAGF,KAAK,CAACU,QAAQ,CAAC,CAAC,CAC/B;AACA,GAAID,aAAa,CAACN,IAAI,CAACC,KAAK,GAAKF,YAAY,CAACC,IAAI,CAACC,KAAK,CAAE,CACzD,GAAM,CAAAA,KAAK,CAAGF,YAAY,CAACC,IAAI,CAACC,KAAK,CACrCP,YAAY,CAACO,KAAK,CAAC,CACpB,CACD,CAAC,CAAC,CACF,cAAe,CAAAJ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}