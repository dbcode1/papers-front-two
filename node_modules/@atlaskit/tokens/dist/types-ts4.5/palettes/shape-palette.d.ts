import type { ShapeScaleTokenSchema } from '../types';
/**
 * Types are inferred from the base tokens below
 */
export type ShapePaletteToken = BaseRadiusToken | BaseSizeToken;
export type BaseSizeToken = keyof typeof baseSizeTokens;
export type BaseRadiusToken = keyof typeof baseRadiusTokens;
declare const baseSizeTokens: {
    readonly Size0: {
        readonly value: 0;
        readonly attributes: {
            readonly group: "shape";
        };
    };
    readonly Size050: {
        readonly value: 1;
        readonly attributes: {
            readonly group: "shape";
        };
    };
    readonly Size100: {
        readonly value: 2;
        readonly attributes: {
            readonly group: "shape";
        };
    };
    readonly Size200: {
        readonly value: 3;
        readonly attributes: {
            readonly group: "shape";
        };
    };
};
declare const baseRadiusTokens: {
    readonly Radius050: {
        readonly value: 2;
        readonly attributes: {
            readonly group: "shape";
        };
    };
    readonly Radius100: {
        readonly value: 4;
        readonly attributes: {
            readonly group: "shape";
        };
    };
    readonly Radius200: {
        readonly value: 8;
        readonly attributes: {
            readonly group: "shape";
        };
    };
    readonly Radius300: {
        readonly value: 12;
        readonly attributes: {
            readonly group: "shape";
        };
    };
    readonly Radius400: {
        readonly value: 16;
        readonly attributes: {
            readonly group: "shape";
        };
    };
    readonly RadiusCircle: {
        readonly value: 32032;
        readonly attributes: {
            readonly group: "shape";
        };
    };
};
declare const shapePalette: ShapeScaleTokenSchema<BaseRadiusToken, BaseSizeToken>;
export default shapePalette;
